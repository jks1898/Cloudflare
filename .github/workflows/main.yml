name: Update Telecom IPs

on:
  schedule:
    - cron: '0 */3 * * *' # 每 3 小时运行一次（UTC 时间）
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write

jobs:
  update-telecom-ips:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Fetch top 5 Telecom IPs
        run: |
          python <<'PYTHON_SCRIPT'
          import requests
          from bs4 import BeautifulSoup
          import re
          import os

          url = 'https://www.wetest.vip/page/cloudflare/address_v4.html'
          ip_file = 'ip.txt'

          if os.path.exists(ip_file):
              os.remove(ip_file)

          try:
              response = requests.get(url, timeout=5)
              response.raise_for_status()
              soup = BeautifulSoup(response.text, 'html.parser')

              ip_pattern = r'\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b'
              telecom_ips = []

              rows = soup.find_all('tr')
              for row in rows:
                  cells = row.find_all('td')
                  if len(cells) >= 2:
                      carrier = cells[0].get_text().strip()
                      ip_cell = cells[1].get_text().strip()
                      if '电信' in carrier:
                          ip_match = re.search(ip_pattern, ip_cell)
                          if ip_match:
                              telecom_ips.append(ip_match.group(0))
                  if len(telecom_ips) >= 5:
                      break

              if telecom_ips:
                  with open(ip_file, 'w') as f:
                      for ip in telecom_ips:
                          f.write(f"{ip}:443#狮城\n")
                  print(f"已保存 {len(telecom_ips)} 个电信 IP 到 {ip_file}。")
              else:
                  print("未找到电信 IP。")

          except requests.RequestException as e:
              print(f"请求失败: {e}")
          PYTHON_SCRIPT

      - name: Commit and push changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "actions@github.com"
          git add ip.txt
          git commit -m "Update top 5 Telecom IPs #狮城" || echo "No changes to commit"
          git push
